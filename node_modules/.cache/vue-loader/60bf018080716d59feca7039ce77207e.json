{"remainingRequest":"D:\\project\\notebook\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\notebook\\node_modules\\view-design\\src\\components\\table\\cell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\notebook\\node_modules\\view-design\\src\\components\\table\\cell.vue","mtime":1586334623000},{"path":"D:\\project\\notebook\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\notebook\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\project\\notebook\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\notebook\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUYWJsZUV4cGFuZCBmcm9tICcuL2V4cGFuZCc7CmltcG9ydCBUYWJsZVNsb3QgZnJvbSAnLi9zbG90JzsKaW1wb3J0IEljb24gZnJvbSAnLi4vaWNvbi9pY29uLnZ1ZSc7CmltcG9ydCBDaGVja2JveCBmcm9tICcuLi9jaGVja2JveC9jaGVja2JveC52dWUnOwppbXBvcnQgVG9vbHRpcCBmcm9tICcuLi90b29sdGlwL3Rvb2x0aXAudnVlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUYWJsZUNlbGwnLAogICAgY29tcG9uZW50czogeyBJY29uLCBDaGVja2JveCwgVGFibGVFeHBhbmQsIFRhYmxlU2xvdCwgVG9vbHRpcCB9LAogICAgaW5qZWN0OiBbJ3RhYmxlUm9vdCddLAogICAgcHJvcHM6IHsKICAgICAgICBwcmVmaXhDbHM6IFN0cmluZywKICAgICAgICByb3c6IE9iamVjdCwKICAgICAgICBjb2x1bW46IE9iamVjdCwKICAgICAgICBuYXR1cmFsSW5kZXg6IE51bWJlciwgICAgLy8gaW5kZXggb2YgcmVidWlsZERhdGEKICAgICAgICBpbmRleDogTnVtYmVyLCAgICAgICAgICAgLy8gX2luZGV4IG9mIGRhdGEKICAgICAgICBjaGVja2VkOiBCb29sZWFuLAogICAgICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgICAgIGV4cGFuZGVkOiBCb29sZWFuLAogICAgICAgIGZpeGVkOiB7CiAgICAgICAgICAgIHR5cGU6IFtCb29sZWFuLCBTdHJpbmddLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgLy8g5piv5ZCm5Li6IHRyZWUg5a2Q6IqC54K5CiAgICAgICAgdHJlZU5vZGU6IEJvb2xlYW4sCiAgICAgICAgdHJlZUxldmVsOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMAogICAgICAgIH0KICAgIH0sCiAgICBkYXRhICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByZW5kZXJUeXBlOiAnJywKICAgICAgICAgICAgdWlkOiAtMSwKICAgICAgICAgICAgY29udGV4dDogdGhpcy4kcGFyZW50LiRwYXJlbnQuJHBhcmVudC5jdXJyZW50Q29udGV4dCwKICAgICAgICAgICAgc2hvd1Rvb2x0aXA6IGZhbHNlLCAgLy8g6byg5qCH5ruR6L+Hb3ZlcmZsb3fmlofmnKzml7bvvIzlho3mo4Dmn6XmmK/lkKbpnIDopoHmmL7npLoKICAgICAgICAgICAgdG9vbHRpcFNob3c6IGZhbHNlCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGNsYXNzZXMgKCkgewogICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgYCR7dGhpcy5wcmVmaXhDbHN9LWNlbGxgLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFtgJHt0aGlzLnByZWZpeENsc30taGlkZGVuYF06ICF0aGlzLmZpeGVkICYmIHRoaXMuY29sdW1uLmZpeGVkICYmICh0aGlzLmNvbHVtbi5maXhlZCA9PT0gJ2xlZnQnIHx8IHRoaXMuY29sdW1uLmZpeGVkID09PSAncmlnaHQnKSwKICAgICAgICAgICAgICAgICAgICBbYCR7dGhpcy5wcmVmaXhDbHN9LWNlbGwtZWxsaXBzaXNgXTogdGhpcy5jb2x1bW4uZWxsaXBzaXMgfHwgZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1jZWxsLXdpdGgtZXhwYW5kYF06IHRoaXMucmVuZGVyVHlwZSA9PT0gJ2V4cGFuZCcsCiAgICAgICAgICAgICAgICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1jZWxsLXdpdGgtc2VsZWN0aW9uYF06IHRoaXMucmVuZGVyVHlwZSA9PT0gJ3NlbGVjdGlvbicKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXTsKICAgICAgICB9LAogICAgICAgIGV4cGFuZENscyAoKSB7CiAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICBgJHt0aGlzLnByZWZpeENsc30tY2VsbC1leHBhbmRgLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFtgJHt0aGlzLnByZWZpeENsc30tY2VsbC1leHBhbmQtZXhwYW5kZWRgXTogdGhpcy5leHBhbmRlZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdOwogICAgICAgIH0sCiAgICAgICAgc2hvd0NoaWxkcmVuICgpIHsKICAgICAgICAgICAgbGV0IHN0YXR1cyA9IGZhbHNlOwogICAgICAgICAgICBpZiAodGhpcy5yZW5kZXJUeXBlID09PSAnaHRtbCcgfHwgdGhpcy5yZW5kZXJUeXBlID09PSAnbm9ybWFsJyB8fCB0aGlzLnJlbmRlclR5cGUgPT09ICdyZW5kZXInIHx8IHRoaXMucmVuZGVyVHlwZSA9PT0gJ3Nsb3QnKSB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5yb3c7CiAgICAgICAgICAgICAgICBpZiAoKGRhdGEuY2hpbGRyZW4gJiYgZGF0YS5jaGlsZHJlbi5sZW5ndGgpIHx8ICgnX2xvYWRpbmcnIGluIGRhdGEpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY29sdW1uLnRyZWUpIHN0YXR1cyA9IHRydWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHN0YXR1czsKICAgICAgICB9LAogICAgICAgIHNob3dUcmVlTm9kZSAoKSB7CiAgICAgICAgICAgIGxldCBzdGF0dXMgPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHRoaXMucmVuZGVyVHlwZSA9PT0gJ2h0bWwnIHx8IHRoaXMucmVuZGVyVHlwZSA9PT0gJ25vcm1hbCcgfHwgdGhpcy5yZW5kZXJUeXBlID09PSAncmVuZGVyJyB8fCB0aGlzLnJlbmRlclR5cGUgPT09ICdzbG90JykgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuY29sdW1uLnRyZWUgJiYgdGhpcy50cmVlTm9kZSkgc3RhdHVzID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gc3RhdHVzOwogICAgICAgIH0sCiAgICAgICAgc2hvd0xldmVsICgpIHsKICAgICAgICAgICAgbGV0IHN0YXR1cyA9IGZhbHNlOwogICAgICAgICAgICBpZiAodGhpcy5yZW5kZXJUeXBlID09PSAnaHRtbCcgfHwgdGhpcy5yZW5kZXJUeXBlID09PSAnbm9ybWFsJyB8fCB0aGlzLnJlbmRlclR5cGUgPT09ICdyZW5kZXInIHx8IHRoaXMucmVuZGVyVHlwZSA9PT0gJ3Nsb3QnKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb2x1bW4udHJlZSAmJiB0aGlzLnRyZWVOb2RlKSBzdGF0dXMgPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBzdGF0dXM7CiAgICAgICAgfSwKICAgICAgICB0cmVlTGV2ZWxTdHlsZSAoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAncGFkZGluZy1sZWZ0JzogdGhpcy50cmVlTGV2ZWwgKiB0aGlzLnRhYmxlUm9vdC5pbmRlbnRTaXplICsgJ3B4JwogICAgICAgICAgICB9OwogICAgICAgIH0sCiAgICAgICAgY2hpbGRyZW5FeHBhbmQgKCkgewogICAgICAgICAgICBjb25zdCBkYXRhID0gdGhpcy50YWJsZVJvb3QuZ2V0RGF0YUJ5Um93S2V5KHRoaXMucm93Ll9yb3dLZXkpOwogICAgICAgICAgICByZXR1cm4gZGF0YS5faXNTaG93Q2hpbGRyZW47CiAgICAgICAgfSwKICAgICAgICBjaGlsZHJlbkxvYWRpbmcgKCkgewogICAgICAgICAgICBjb25zdCBkYXRhID0gdGhpcy50YWJsZVJvb3QuZ2V0RGF0YUJ5Um93S2V5KHRoaXMucm93Ll9yb3dLZXkpOwogICAgICAgICAgICByZXR1cm4gJ19sb2FkaW5nJyBpbiBkYXRhICYmIGRhdGEuX2xvYWRpbmc7CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICB0b2dnbGVTZWxlY3QgKCkgewogICAgICAgICAgICBpZiAodGhpcy50cmVlTm9kZSkgewogICAgICAgICAgICAgICAgdGhpcy4kcGFyZW50LiRwYXJlbnQuJHBhcmVudC50b2dnbGVTZWxlY3QodGhpcy5pbmRleCwgdGhpcy5yb3cuX3Jvd0tleSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRwYXJlbnQuJHBhcmVudC4kcGFyZW50LnRvZ2dsZVNlbGVjdCh0aGlzLmluZGV4KTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9nZ2xlRXhwYW5kICgpIHsKICAgICAgICAgICAgdGhpcy4kcGFyZW50LiRwYXJlbnQuJHBhcmVudC50b2dnbGVFeHBhbmQodGhpcy5pbmRleCk7CiAgICAgICAgfSwKICAgICAgICBoYW5kbGVDbGljayAoKSB7CiAgICAgICAgICAgIC8vIOaUvue9riBDaGVja2JveCDlhpLms6EKICAgICAgICB9LAogICAgICAgIGhhbmRsZVRvb2x0aXBJbiAoKSB7CiAgICAgICAgICAgIGNvbnN0ICRjb250ZW50ID0gdGhpcy4kcmVmcy5jb250ZW50OwogICAgICAgICAgICB0aGlzLnNob3dUb29sdGlwID0gJGNvbnRlbnQuc2Nyb2xsV2lkdGggPiAkY29udGVudC5vZmZzZXRXaWR0aDsKICAgICAgICB9LAogICAgICAgIGhhbmRsZVRvb2x0aXBPdXQgKCkgewogICAgICAgICAgICB0aGlzLnNob3dUb29sdGlwID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBoYW5kbGVUb29sdGlwU2hvdyAoKSB7CiAgICAgICAgICAgIHRoaXMudG9vbHRpcFNob3cgPSB0cnVlOwogICAgICAgIH0sCiAgICAgICAgaGFuZGxlVG9vbHRpcEhpZGUgKCkgewogICAgICAgICAgICB0aGlzLnRvb2x0aXBTaG93ID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBoYW5kbGVUb2dnbGVUcmVlICgpIHsKICAgICAgICAgICAgdGhpcy4kcGFyZW50LiRwYXJlbnQuJHBhcmVudC50b2dnbGVUcmVlKHRoaXMucm93Ll9yb3dLZXkpOwogICAgICAgIH0sCiAgICAgICAgaGFuZGxlQ2VsbENsaWNrIChldmVudCkgewogICAgICAgICAgICB0aGlzLiRwYXJlbnQuJHBhcmVudC4kcGFyZW50LiRlbWl0KCdvbi1jZWxsLWNsaWNrJywgdGhpcy5yb3csIHRoaXMuY29sdW1uLCB0aGlzLnJvd1t0aGlzLmNvbHVtbi5rZXldLCBldmVudCk7CiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQgKCkgewogICAgICAgIGlmICh0aGlzLmNvbHVtbi50eXBlID09PSAnaW5kZXgnKSB7CiAgICAgICAgICAgIHRoaXMucmVuZGVyVHlwZSA9ICdpbmRleCc7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbHVtbi50eXBlID09PSAnc2VsZWN0aW9uJykgewogICAgICAgICAgICB0aGlzLnJlbmRlclR5cGUgPSAnc2VsZWN0aW9uJzsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY29sdW1uLnR5cGUgPT09ICdodG1sJykgewogICAgICAgICAgICB0aGlzLnJlbmRlclR5cGUgPSAnaHRtbCc7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbHVtbi50eXBlID09PSAnZXhwYW5kJykgewogICAgICAgICAgICB0aGlzLnJlbmRlclR5cGUgPSAnZXhwYW5kJzsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY29sdW1uLnJlbmRlcikgewogICAgICAgICAgICB0aGlzLnJlbmRlclR5cGUgPSAncmVuZGVyJzsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY29sdW1uLnNsb3QpIHsKICAgICAgICAgICAgdGhpcy5yZW5kZXJUeXBlID0gJ3Nsb3QnOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMucmVuZGVyVHlwZSA9ICdub3JtYWwnOwogICAgICAgIH0KICAgIH0KfTsK"},{"version":3,"sources":["cell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cell.vue","sourceRoot":"node_modules/view-design/src/components/table","sourcesContent":["<template>\n    <div :class=\"classes\" ref=\"cell\" @click=\"handleCellClick\">\n        <template v-if=\"renderType === 'index'\"><span>{{ column.indexMethod ? column.indexMethod(row) : (naturalIndex + 1) }}</span></template>\n        <template v-if=\"renderType === 'selection'\">\n            <Checkbox :value=\"checked\" @click.native.stop=\"handleClick\" @on-change=\"toggleSelect\" :disabled=\"disabled\"></Checkbox>\n        </template>\n        <div class=\"ivu-table-cell-tree-level\" v-if=\"showLevel\" :style=\"treeLevelStyle\"></div>\n        <div class=\"ivu-table-cell-tree\" :class=\"{ 'ivu-table-cell-tree-loading': childrenLoading }\" v-if=\"showChildren\" @click.prevent.stop=\"handleToggleTree\">\n            <Icon type=\"ios-loading\" v-if=\"childrenLoading\" class=\"ivu-load-loop\" />\n            <Icon type=\"ios-add\" v-else-if=\"!childrenExpand\" />\n            <Icon type=\"ios-remove\" v-else />\n        </div>\n        <div class=\"ivu-table-cell-tree ivu-table-cell-tree-empty\" v-else-if=\"showTreeNode\"></div>\n        <template v-if=\"renderType === 'html'\"><span v-html=\"row[column.key]\"></span></template>\n        <template v-if=\"renderType === 'normal'\">\n            <template v-if=\"column.tooltip\">\n                <Tooltip transfer :content=\"row[column.key]\" :theme=\"tableRoot.tooltipTheme\" :disabled=\"!showTooltip && !tooltipShow\" :max-width=\"300\" class=\"ivu-table-cell-tooltip\" @on-popper-show=\"handleTooltipShow\" @on-popper-hide=\"handleTooltipHide\">\n                    <span ref=\"content\" @mouseenter=\"handleTooltipIn\" @mouseleave=\"handleTooltipOut\" class=\"ivu-table-cell-tooltip-content\">{{ row[column.key] }}</span>\n                </Tooltip>\n            </template>\n            <span v-else>{{row[column.key]}}</span>\n        </template>\n        <template v-if=\"renderType === 'expand' && !row._disableExpand\">\n            <div :class=\"expandCls\" @click=\"toggleExpand\">\n                <Icon type=\"ios-arrow-forward\"></Icon>\n            </div>\n        </template>\n        <table-expand\n            v-if=\"renderType === 'render'\"\n            :row=\"row\"\n            :column=\"column\"\n            :index=\"index\"\n            :render=\"column.render\"></table-expand>\n        <table-slot\n            v-if=\"renderType === 'slot'\"\n            :row=\"row\"\n            :column=\"column\"\n            :display=\"column.display || 'block'\"\n            :index=\"index\"></table-slot>\n    </div>\n</template>\n<script>\n    import TableExpand from './expand';\n    import TableSlot from './slot';\n    import Icon from '../icon/icon.vue';\n    import Checkbox from '../checkbox/checkbox.vue';\n    import Tooltip from '../tooltip/tooltip.vue';\n\n    export default {\n        name: 'TableCell',\n        components: { Icon, Checkbox, TableExpand, TableSlot, Tooltip },\n        inject: ['tableRoot'],\n        props: {\n            prefixCls: String,\n            row: Object,\n            column: Object,\n            naturalIndex: Number,    // index of rebuildData\n            index: Number,           // _index of data\n            checked: Boolean,\n            disabled: Boolean,\n            expanded: Boolean,\n            fixed: {\n                type: [Boolean, String],\n                default: false\n            },\n            // 是否为 tree 子节点\n            treeNode: Boolean,\n            treeLevel: {\n                type: Number,\n                default: 0\n            }\n        },\n        data () {\n            return {\n                renderType: '',\n                uid: -1,\n                context: this.$parent.$parent.$parent.currentContext,\n                showTooltip: false,  // 鼠标滑过overflow文本时，再检查是否需要显示\n                tooltipShow: false\n            };\n        },\n        computed: {\n            classes () {\n                return [\n                    `${this.prefixCls}-cell`,\n                    {\n                        [`${this.prefixCls}-hidden`]: !this.fixed && this.column.fixed && (this.column.fixed === 'left' || this.column.fixed === 'right'),\n                        [`${this.prefixCls}-cell-ellipsis`]: this.column.ellipsis || false,\n                        [`${this.prefixCls}-cell-with-expand`]: this.renderType === 'expand',\n                        [`${this.prefixCls}-cell-with-selection`]: this.renderType === 'selection'\n                    }\n                ];\n            },\n            expandCls () {\n                return [\n                    `${this.prefixCls}-cell-expand`,\n                    {\n                        [`${this.prefixCls}-cell-expand-expanded`]: this.expanded\n                    }\n                ];\n            },\n            showChildren () {\n                let status = false;\n                if (this.renderType === 'html' || this.renderType === 'normal' || this.renderType === 'render' || this.renderType === 'slot') {\n                    const data = this.row;\n                    if ((data.children && data.children.length) || ('_loading' in data)) {\n                        if (this.column.tree) status = true;\n                    }\n                }\n                return status;\n            },\n            showTreeNode () {\n                let status = false;\n                if (this.renderType === 'html' || this.renderType === 'normal' || this.renderType === 'render' || this.renderType === 'slot') {\n                    if (this.column.tree && this.treeNode) status = true;\n                }\n                return status;\n            },\n            showLevel () {\n                let status = false;\n                if (this.renderType === 'html' || this.renderType === 'normal' || this.renderType === 'render' || this.renderType === 'slot') {\n                    if (this.column.tree && this.treeNode) status = true;\n                }\n                return status;\n            },\n            treeLevelStyle () {\n                return {\n                    'padding-left': this.treeLevel * this.tableRoot.indentSize + 'px'\n                };\n            },\n            childrenExpand () {\n                const data = this.tableRoot.getDataByRowKey(this.row._rowKey);\n                return data._isShowChildren;\n            },\n            childrenLoading () {\n                const data = this.tableRoot.getDataByRowKey(this.row._rowKey);\n                return '_loading' in data && data._loading;\n            }\n        },\n        methods: {\n            toggleSelect () {\n                if (this.treeNode) {\n                    this.$parent.$parent.$parent.toggleSelect(this.index, this.row._rowKey);\n                } else {\n                    this.$parent.$parent.$parent.toggleSelect(this.index);\n                }\n            },\n            toggleExpand () {\n                this.$parent.$parent.$parent.toggleExpand(this.index);\n            },\n            handleClick () {\n                // 放置 Checkbox 冒泡\n            },\n            handleTooltipIn () {\n                const $content = this.$refs.content;\n                this.showTooltip = $content.scrollWidth > $content.offsetWidth;\n            },\n            handleTooltipOut () {\n                this.showTooltip = false;\n            },\n            handleTooltipShow () {\n                this.tooltipShow = true;\n            },\n            handleTooltipHide () {\n                this.tooltipShow = false;\n            },\n            handleToggleTree () {\n                this.$parent.$parent.$parent.toggleTree(this.row._rowKey);\n            },\n            handleCellClick (event) {\n                this.$parent.$parent.$parent.$emit('on-cell-click', this.row, this.column, this.row[this.column.key], event);\n            }\n        },\n        created () {\n            if (this.column.type === 'index') {\n                this.renderType = 'index';\n            } else if (this.column.type === 'selection') {\n                this.renderType = 'selection';\n            } else if (this.column.type === 'html') {\n                this.renderType = 'html';\n            } else if (this.column.type === 'expand') {\n                this.renderType = 'expand';\n            } else if (this.column.render) {\n                this.renderType = 'render';\n            } else if (this.column.slot) {\n                this.renderType = 'slot';\n            } else {\n                this.renderType = 'normal';\n            }\n        }\n    };\n</script>\n"]}]}