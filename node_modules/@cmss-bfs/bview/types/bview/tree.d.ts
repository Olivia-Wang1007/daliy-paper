import Vue from 'vue';

export declare class Tree extends Vue {
  /**
   * 是否展示icon
   * @default false
   */
  'show-icon'?: boolean;
  /**
   * 数据源
   * @default []
   */
  'data'?: Array<any>;
  /**
   * 是否展示半选状态
   * @default false
   */
  'check-strictly'?: boolean;
  /**
   * 设置树节点的大小, 可选值 : 'large' or '' or ''small'
   * @default ''
   */
  size?: string;
  /**
   * 设置是否显示选择框
   * @default false
   */
  'show-checkbox'?: boolean;
  /**
   * 设置是否允许使用过渡效果
   * @default true
   */
  'allow-transition'?: boolean;
  /**
   * 设置是否整个树节点高亮
   * @default false
   */
  'whole-row'?: boolean;
  /**
   * 设置是否显示树节点前的虚线
   * @default false
   */
  'no-dots'?: boolean;
  /**
   * 设置节点全部展开或合并的初始值，不设置按节点自身的 opened 属性控制
   * @default false
   */
  collapse?: boolean;
  /**
   * 设置是否可以多选
   * @default false
   */
  multiple?: boolean;
  /**
   * 设置允许批量选择子节点
   * @default false
   */
  ' allow-batch'?: boolean;

  /**
   * 节点展示字段
   * @default 'text'
   */
  'text-field-name'?: string;
  /**
   * 设置 值 的字段名称，默认为 value
   * @default 'value'
   */
  'value-field-name'?: string;
  /**
   * 设置 子节点 的字段名称，默认为 children
   * @default 'children'
   */
  'children-field-name'?: string;
  /**
   * 注册任意事件到每个数节点上
   * @default {}
   */
  'item-events'?: object;
  /**
   * 异步加载数据的回调函数 , 如果当前节点没有子项 ,
   * 设置树节点中的 'isLeaf: true' 可不现实 + 号
   * @default void
   */
  'async'?: () => void;
  /**
   * 设置 Loading 文字
   * @default Loading
   */
  'loading-text'?: string;
  /**
   * 设置是否启用拖拽 , 默认全部节点可拖拽, 如自定义个别节点禁用拖拽或
   * 禁用拖放可设置 'dragDisabled: true' 和 'dropDisabled: true'
   * @default false
   */
  draggable?: boolean;
  /**
   * 设置拖拽进入节点时的背景色
   * @default '#C9FDC9'
   */
  'drag-over-background-color'?: string;
  /**
   * 设置追加 class
   * @default
   */
  klass?: string;

  /**
   * 选择节点时触发
   * @param node 被选择的节点的vue对象
   * @param item 被选择的节点的数据对象
   * @param event 鼠标事件
   */
  $emit(eventName: 'item-click', node: any, item: any, event: object): this;
  /**
   * 点击节点时触发
   * @param node 被选择的节点的vue对象
   * @param item 被选择的节点的数据对象
   * @param event 鼠标事件
   */
  $emit(eventName: 'item-toggle', node: any, item: any, event: object): this;
  /**
   * 开始拖动节点时触发
   * @param node 被选择的节点的vue对象
   * @param item 被选择的节点的数据对象
   * @param event 鼠标事件
   */
  $emit(
    eventName: 'item-drag-start',
    node: any,
    item: any,
    event: object
  ): this;
  /**
   * 拖动节点结束时触发
   * @param node 被选择的节点的vue对象
   * @param item 被选择的节点的数据对象
   * @param event 鼠标事件
   */
  $emit(eventName: 'item-drag-end', node: any, item: any, event: object): this;
  /**
   * 拖动节点到可释放目标位置前时触发
   * @param node 被拖拽的节点的vue对象
   * @param item 拖拽到哪个节点的数据对象 to
   * @param draggedItem 被拖拽节点的数据对象 from
   * @param event 鼠标事件
   */
  $emit(
    eventName: 'item-drop-before',
    node: any,
    item: any,
    draggedItem: any,
    event: object
  ): this;
  /**
   * 拖动节点到可释放目标位置时触发
   * @param node 被拖拽的节点的vue对象
   * @param item 拖拽到哪个节点的数据对象 to
   * @param draggedItem 被拖拽节点的数据对象 from
   * @param event 鼠标事件
   */
  $emit(
    eventName: 'item-drop',
    node: any,
    item: any,
    draggedItem: any,
    event: object
  ): this;
}
