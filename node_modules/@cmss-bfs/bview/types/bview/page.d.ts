import Vue, { VNode } from 'vue';
import { AutoTableDataModelItem } from './auto-table';

export declare class Page extends Vue {
  /**
   * 当前页码，支持 .sync 修饰符
   * @default 1
   */
  current?: number;
  /**
   * 数据总数
   * @default 0
   */
  total?: number;
  /**
   * 每页条数
   * @default 10
   */
  'page-size'?: number;
  /**
   * 每页条数切换的配置
   * @default [10, 20, 30, 40]
   */
  'page-size-opts'?: number[];
  /**
   * 条数切换弹窗的展开方向，可选值为 bottom 和 top
   * @default bottom
   */
  placement?: string;
  /**
   * 可选值为small（迷你版）或不填（默认）
   */
  size?: string;
  /**
   * 简洁版
   * @default false
   */
  simple?: boolean;
  /**
   * 显示总数
   * @default false
   */
  'show-total'?: boolean;
  /**
   * 显示电梯，可以快速切换到某一页
   * @default true
   */
  'show-elevator'?: boolean;
  /**
   * 显示分页，用来改变page-size
   * @default false
   */
  'show-sizer'?: boolean;
  /**
   * 自定义 class 名称
   */
  'class-name'?: string;
  /**
   * 自定义 style 样式
   */
  styles?: object;
  /**
   * 是否将弹层放置于 body 内，
   * 在 Tabs、带有 fixed 的 Table 列内使用时，建议添加此属性，
   * 它将不受父级样式影响，从而达到更好的效果
   * @default false
   */
  transfer?: boolean;
  /**
   * 替代图标显示的上一页文字
   */
  'prev-text'?: string;
  /**
   * 替代图标显示的下一页文字
   */
  'next-text'?: string;
  /**
   * 页码改变的回调，返回改变后的页码
   * @param pageNum 页码
   */
  $emit(eventName: 'on-change', pageNum: number): this;
  /**
   * 切换每页条数时的回调，返回切换后的每页条数
   * @param pageSize 每页条数
   */
  $emit(eventName: 'on-page-size-change', pageSize: number): this;
  /**
   * slot插槽对象
   */
  $slots: {
    /**
     * 自定义显示总数的内容
     */
    '': VNode[];
  };
}

export declare class EnPage extends Vue {
  /**
   * @default true
   */
  'transfer'?: boolean;
  /**
   * 每页条数切换的配置
   * @default [10, 20, 30, 50, 100]
   */
  'limit-range'?: number[];
  /**
   * 分页的数据集，结构:{offset: 1,limit: 10,totalPage: 99}
   */
  'meta-info'?: PageMetaInfo;
  /**
   * 是否使用左侧设置每页行数的组件
   * @default false
   */
  'use-record-scan'?: boolean;
  /**
   * 在组件渲染完成后立即触发change事件
   * @default true
   */
  'immediate-trigger'?: boolean;
  /**
   * 页码改变的回调，返回改变后的分页数据
   * @param metaInfo 分页数据
   */
  $emit(eventName: 'change', metaInfo?: PageMetaInfo): this;
}

export declare class PageMetaInfo {
  offset?: number;
  limit?: number;
  totalPage?: number;
  totalSize?: number;
}

// 用来设置表格展示哪些列的按钮组件
export declare class ColumnSetting extends Vue {
  /**
   * 数据模型
   * @default []
   */
  'data-models': AutoTableDataModelItem[];
  /**
   * 选择表格展示哪些列之后，点击确定按钮触发
   * dataModels: 选择后要展示的数据模型
   */
  $emit(eventName: 'change-column', dataModels: AutoTableDataModelItem[]): this;
}

export declare class PageRecordScan extends Vue {
  /**
   * @default true
   */
  'transfer'?: boolean;
  /**
   * 每页条数切换的配置
   * @default [10, 20, 30, 50, 100]
   */
  'limit-range'?: number[];
  /**
   * 数据总数
   * @default 0
   */
  total?: number | string;
}
